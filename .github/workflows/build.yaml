name: build

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-musl
        override: true
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: wasm32-unknown-unknown
    - uses: actions/setup-node@v3
      with:
        node-version: "19"
    - uses: jetli/trunk-action@v0.4.0
      with:
        version: latest

    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: v1-rust
    - uses: actions/cache@v2
      with:
        path: frontend/node_modules
        key: frontend-node-modules-${{ runner.os }}-${{ hashFiles('frontend/yarn.lock') }}
        restore-keys: |
          frontend-node-modules-${{ runner.os }}-

    - name: Install node dependencies
      working-directory: frontend
      run: yarn
    - name: Build frontend
      working-directory: frontend
      run: trunk build --release

    - name: Build backend
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target x86_64-unknown-linux-musl

    - uses: actions/upload-artifact@v3
      with:
        name: nanum
        path: |
          target/x86_64-unknown-linux-musl/release/nanum
          target/x86_64-unknown-linux-musl/release/nanum-admin
        if-no-files-found: error

    - name: Login to GitHub Container Registry
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push container image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
        docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
